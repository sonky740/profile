{"version":3,"sources":["webpack:///./node_modules/prismjs/plugins/toolbar/prism-toolbar.js","webpack:///./src/images/posco/posco1.png","webpack:///./node_modules/prismjs/plugins/show-language/prism-show-language.js","webpack:///./src/components/layout.js","webpack:///./src/components/tooltip.js","webpack:///./node_modules/prismjs/components/prism-javascript.js","webpack:///./node_modules/prismjs/components/prism-css.js","webpack:///./node_modules/prismjs/components/prism-markup.js","webpack:///./src/pages/works4/index.js","webpack:///./node_modules/prismjs/components/prism-core.js","webpack:///./node_modules/prismjs/plugins/line-numbers/prism-line-numbers.js","webpack:///./node_modules/prismjs/components/prism-clike.js"],"names":["self","Prism","document","callbacks","map","noop","plugins","toolbar","registerButton","key","opts","callback","env","element","onClick","createElement","type","addEventListener","call","this","url","href","className","classList","add","textContent","text","console","warn","push","hook","pre","parentNode","test","nodeName","contains","wrapper","insertBefore","appendChild","elementCallbacks","order","getAttribute","trim","length","split","parentElement","getOrder","forEach","item","hasAttribute","template","querySelector","e","content","hooks","module","exports","Languages","id","language","substring","toUpperCase","replace","Layout","children","to","Tooltip","data-tooltip","target","rel","preventDefault","remove","languages","javascript","extend","clike","pattern","lookbehind","greedy","inside","alias","regex","rest","markup","tag","addInlined","js","string","css","RegExp","source","attributes","Object","defineProperty","value","tagName","lang","includedCdataInside","def","html","mathml","svg","xml","ssml","atom","rss","IndexPage","useEffect","setTimeout","highlightAll","Posco1","src","alt","_self","uniqueId","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","Array","isArray","o","prototype","toString","slice","objId","obj","clone","deepClone","visited","hasOwnProperty","v","i","getLanguage","match","toLowerCase","currentScript","Error","err","exec","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","redef","before","insert","root","grammar","ret","token","newToken","old","DFS","property","propertyType","async","highlightAllUnder","container","selector","run","elements","apply","querySelectorAll","highlightElement","parent","code","insertHighlightedCode","highlightedCode","innerHTML","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","tokenize","tokenList","LinkedList","addAfter","head","matchGrammar","startNode","startPos","rematch","patterns","j","cause","patternObj","lookbehindLength","global","flags","currentNode","next","pos","tail","reach","str","removeCount","prev","lastIndex","from","index","p","k","matchStr","after","removeFrom","removeRange","wrapped","list","array","node","toArray","all","name","matchedStr","newNode","count","s","classes","aliases","join","message","parse","close","script","highlightAutomaticallyCallback","readyState","defer","window","requestAnimationFrame","WorkerGlobalScope","NEW_LINE_EXP","config","lineNumbers","getLine","number","lineNumberRows","lineNumberStart","parseInt","lineNumberEnd","lineIndex","resize","resizeElements","assumeViewportIndependence","getStyles","getComputedStyle","currentStyle","lastWidth","undefined","innerWidth","lineNumbersWrapper","linesNum","lines","setAttribute","style","counterReset","filter","whiteSpace","infos","codeElement","lineNumberSizer","codeLines","display","oneLinerHeight","getBoundingClientRect","height","lineHeights","sizer","Boolean","info","line","childIndex","lineNumber"],"mappings":"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","file":"component---src-pages-works-4-index-js-e7837a2b52590b90ddd5.js","sourcesContent":["(function () {\n  if (typeof self === 'undefined' || !self.Prism || !self.document) {\n    return;\n  }\n\n  var callbacks = [];\n  var map = {};\n\n  var noop = function noop() {};\n\n  Prism.plugins.toolbar = {};\n  /**\n   * @typedef ButtonOptions\n   * @property {string} text The text displayed.\n   * @property {string} [url] The URL of the link which will be created.\n   * @property {Function} [onClick] The event listener for the `click` event of the created button.\n   * @property {string} [className] The class attribute to include with element.\n   */\n\n  /**\n   * Register a button callback with the toolbar.\n   *\n   * @param {string} key\n   * @param {ButtonOptions|Function} opts\n   */\n\n  var registerButton = Prism.plugins.toolbar.registerButton = function (key, opts) {\n    var callback;\n\n    if (typeof opts === 'function') {\n      callback = opts;\n    } else {\n      callback = function callback(env) {\n        var element;\n\n        if (typeof opts.onClick === 'function') {\n          element = document.createElement('button');\n          element.type = 'button';\n          element.addEventListener('click', function () {\n            opts.onClick.call(this, env);\n          });\n        } else if (typeof opts.url === 'string') {\n          element = document.createElement('a');\n          element.href = opts.url;\n        } else {\n          element = document.createElement('span');\n        }\n\n        if (opts.className) {\n          element.classList.add(opts.className);\n        }\n\n        element.textContent = opts.text;\n        return element;\n      };\n    }\n\n    if (key in map) {\n      console.warn('There is a button with the key \"' + key + '\" registered already.');\n      return;\n    }\n\n    callbacks.push(map[key] = callback);\n  };\n  /**\n   * Returns the callback order of the given element.\n   *\n   * @param {HTMLElement} element\n   * @returns {string[] | undefined}\n   */\n\n\n  function getOrder(element) {\n    while (element) {\n      var order = element.getAttribute('data-toolbar-order');\n\n      if (order != null) {\n        order = order.trim();\n\n        if (order.length) {\n          return order.split(/\\s*,\\s*/g);\n        } else {\n          return [];\n        }\n      }\n\n      element = element.parentElement;\n    }\n  }\n  /**\n   * Post-highlight Prism hook callback.\n   *\n   * @param env\n   */\n\n\n  var hook = Prism.plugins.toolbar.hook = function (env) {\n    // Check if inline or actual code block (credit to line-numbers plugin)\n    var pre = env.element.parentNode;\n\n    if (!pre || !/pre/i.test(pre.nodeName)) {\n      return;\n    } // Autoloader rehighlights, so only do this once.\n\n\n    if (pre.parentNode.classList.contains('code-toolbar')) {\n      return;\n    } // Create wrapper for <pre> to prevent scrolling toolbar with content\n\n\n    var wrapper = document.createElement('div');\n    wrapper.classList.add('code-toolbar');\n    pre.parentNode.insertBefore(wrapper, pre);\n    wrapper.appendChild(pre); // Setup the toolbar\n\n    var toolbar = document.createElement('div');\n    toolbar.classList.add('toolbar'); // order callbacks\n\n    var elementCallbacks = callbacks;\n    var order = getOrder(env.element);\n\n    if (order) {\n      elementCallbacks = order.map(function (key) {\n        return map[key] || noop;\n      });\n    }\n\n    elementCallbacks.forEach(function (callback) {\n      var element = callback(env);\n\n      if (!element) {\n        return;\n      }\n\n      var item = document.createElement('div');\n      item.classList.add('toolbar-item');\n      item.appendChild(element);\n      toolbar.appendChild(item);\n    }); // Add our toolbar to the currently created wrapper of <pre> tag\n\n    wrapper.appendChild(toolbar);\n  };\n\n  registerButton('label', function (env) {\n    var pre = env.element.parentNode;\n\n    if (!pre || !/pre/i.test(pre.nodeName)) {\n      return;\n    }\n\n    if (!pre.hasAttribute('data-label')) {\n      return;\n    }\n\n    var element, template;\n    var text = pre.getAttribute('data-label');\n\n    try {\n      // Any normal text will blow up this selector.\n      template = document.querySelector('template#' + text);\n    } catch (e) {}\n\n    if (template) {\n      element = template.content;\n    } else {\n      if (pre.hasAttribute('data-url')) {\n        element = document.createElement('a');\n        element.href = pre.getAttribute('data-url');\n      } else {\n        element = document.createElement('span');\n      }\n\n      element.textContent = text;\n    }\n\n    return element;\n  });\n  /**\n   * Register the toolbar with Prism.\n   */\n\n  Prism.hooks.add('complete', hook);\n})();","module.exports = __webpack_public_path__ + \"static/posco1-384e3a6fb04fc6eeeb07dc0f2f14e1dd.png\";","(function () {\n  if (typeof self === 'undefined' || !self.Prism || !self.document) {\n    return;\n  }\n\n  if (!Prism.plugins.toolbar) {\n    console.warn('Show Languages plugin loaded before Toolbar plugin.');\n    return;\n  } // The languages map is built automatically with gulp\n\n\n  var Languages =\n  /*languages_placeholder[*/\n  {\n    \"none\": \"Plain text\",\n    \"html\": \"HTML\",\n    \"xml\": \"XML\",\n    \"svg\": \"SVG\",\n    \"mathml\": \"MathML\",\n    \"ssml\": \"SSML\",\n    \"rss\": \"RSS\",\n    \"css\": \"CSS\",\n    \"clike\": \"C-like\",\n    \"js\": \"JavaScript\",\n    \"abap\": \"ABAP\",\n    \"abnf\": \"ABNF\",\n    \"al\": \"AL\",\n    \"antlr4\": \"ANTLR4\",\n    \"g4\": \"ANTLR4\",\n    \"apacheconf\": \"Apache Configuration\",\n    \"apl\": \"APL\",\n    \"aql\": \"AQL\",\n    \"arff\": \"ARFF\",\n    \"asciidoc\": \"AsciiDoc\",\n    \"adoc\": \"AsciiDoc\",\n    \"aspnet\": \"ASP.NET (C#)\",\n    \"asm6502\": \"6502 Assembly\",\n    \"autohotkey\": \"AutoHotkey\",\n    \"autoit\": \"AutoIt\",\n    \"basic\": \"BASIC\",\n    \"bbcode\": \"BBcode\",\n    \"bnf\": \"BNF\",\n    \"rbnf\": \"RBNF\",\n    \"bsl\": \"BSL (1C:Enterprise)\",\n    \"oscript\": \"OneScript\",\n    \"csharp\": \"C#\",\n    \"cs\": \"C#\",\n    \"dotnet\": \"C#\",\n    \"cpp\": \"C++\",\n    \"cil\": \"CIL\",\n    \"cmake\": \"CMake\",\n    \"coffee\": \"CoffeeScript\",\n    \"conc\": \"Concurnas\",\n    \"csp\": \"Content-Security-Policy\",\n    \"css-extras\": \"CSS Extras\",\n    \"dax\": \"DAX\",\n    \"django\": \"Django/Jinja2\",\n    \"jinja2\": \"Django/Jinja2\",\n    \"dns-zone-file\": \"DNS zone file\",\n    \"dns-zone\": \"DNS zone file\",\n    \"dockerfile\": \"Docker\",\n    \"ebnf\": \"EBNF\",\n    \"editorconfig\": \"EditorConfig\",\n    \"ejs\": \"EJS\",\n    \"etlua\": \"Embedded Lua templating\",\n    \"erb\": \"ERB\",\n    \"excel-formula\": \"Excel Formula\",\n    \"xlsx\": \"Excel Formula\",\n    \"xls\": \"Excel Formula\",\n    \"fsharp\": \"F#\",\n    \"firestore-security-rules\": \"Firestore security rules\",\n    \"ftl\": \"FreeMarker Template Language\",\n    \"gml\": \"GameMaker Language\",\n    \"gamemakerlanguage\": \"GameMaker Language\",\n    \"gcode\": \"G-code\",\n    \"gdscript\": \"GDScript\",\n    \"gedcom\": \"GEDCOM\",\n    \"glsl\": \"GLSL\",\n    \"graphql\": \"GraphQL\",\n    \"hs\": \"Haskell\",\n    \"hcl\": \"HCL\",\n    \"hlsl\": \"HLSL\",\n    \"http\": \"HTTP\",\n    \"hpkp\": \"HTTP Public-Key-Pins\",\n    \"hsts\": \"HTTP Strict-Transport-Security\",\n    \"ichigojam\": \"IchigoJam\",\n    \"ignore\": \".ignore\",\n    \"gitignore\": \".gitignore\",\n    \"hgignore\": \".hgignore\",\n    \"npmignore\": \".npmignore\",\n    \"inform7\": \"Inform 7\",\n    \"javadoc\": \"JavaDoc\",\n    \"javadoclike\": \"JavaDoc-like\",\n    \"javastacktrace\": \"Java stack trace\",\n    \"jq\": \"JQ\",\n    \"jsdoc\": \"JSDoc\",\n    \"js-extras\": \"JS Extras\",\n    \"json\": \"JSON\",\n    \"webmanifest\": \"Web App Manifest\",\n    \"json5\": \"JSON5\",\n    \"jsonp\": \"JSONP\",\n    \"jsstacktrace\": \"JS stack trace\",\n    \"js-templates\": \"JS Templates\",\n    \"kts\": \"Kotlin Script\",\n    \"kt\": \"Kotlin\",\n    \"latex\": \"LaTeX\",\n    \"tex\": \"TeX\",\n    \"context\": \"ConTeXt\",\n    \"lilypond\": \"LilyPond\",\n    \"ly\": \"LilyPond\",\n    \"emacs\": \"Lisp\",\n    \"elisp\": \"Lisp\",\n    \"emacs-lisp\": \"Lisp\",\n    \"llvm\": \"LLVM IR\",\n    \"lolcode\": \"LOLCODE\",\n    \"md\": \"Markdown\",\n    \"markup-templating\": \"Markup templating\",\n    \"matlab\": \"MATLAB\",\n    \"mel\": \"MEL\",\n    \"mongodb\": \"MongoDB\",\n    \"moon\": \"MoonScript\",\n    \"n1ql\": \"N1QL\",\n    \"n4js\": \"N4JS\",\n    \"n4jsd\": \"N4JS\",\n    \"nand2tetris-hdl\": \"Nand To Tetris HDL\",\n    \"naniscript\": \"Naninovel Script\",\n    \"nani\": \"Naninovel Script\",\n    \"nasm\": \"NASM\",\n    \"neon\": \"NEON\",\n    \"nginx\": \"nginx\",\n    \"nsis\": \"NSIS\",\n    \"objectivec\": \"Objective-C\",\n    \"objc\": \"Objective-C\",\n    \"ocaml\": \"OCaml\",\n    \"opencl\": \"OpenCL\",\n    \"parigp\": \"PARI/GP\",\n    \"objectpascal\": \"Object Pascal\",\n    \"pcaxis\": \"PC-Axis\",\n    \"px\": \"PC-Axis\",\n    \"peoplecode\": \"PeopleCode\",\n    \"pcode\": \"PeopleCode\",\n    \"php\": \"PHP\",\n    \"phpdoc\": \"PHPDoc\",\n    \"php-extras\": \"PHP Extras\",\n    \"plsql\": \"PL/SQL\",\n    \"powerquery\": \"PowerQuery\",\n    \"pq\": \"PowerQuery\",\n    \"mscript\": \"PowerQuery\",\n    \"powershell\": \"PowerShell\",\n    \"properties\": \".properties\",\n    \"protobuf\": \"Protocol Buffers\",\n    \"purebasic\": \"PureBasic\",\n    \"pbfasm\": \"PureBasic\",\n    \"purs\": \"PureScript\",\n    \"py\": \"Python\",\n    \"q\": \"Q (kdb+ database)\",\n    \"qml\": \"QML\",\n    \"rkt\": \"Racket\",\n    \"jsx\": \"React JSX\",\n    \"tsx\": \"React TSX\",\n    \"renpy\": \"Ren'py\",\n    \"rpy\": \"Ren'py\",\n    \"rest\": \"reST (reStructuredText)\",\n    \"robotframework\": \"Robot Framework\",\n    \"robot\": \"Robot Framework\",\n    \"rb\": \"Ruby\",\n    \"sas\": \"SAS\",\n    \"sass\": \"Sass (Sass)\",\n    \"scss\": \"Sass (Scss)\",\n    \"shell-session\": \"Shell session\",\n    \"sh-session\": \"Shell session\",\n    \"shellsession\": \"Shell session\",\n    \"sml\": \"SML\",\n    \"smlnj\": \"SML/NJ\",\n    \"solidity\": \"Solidity (Ethereum)\",\n    \"sol\": \"Solidity (Ethereum)\",\n    \"solution-file\": \"Solution file\",\n    \"sln\": \"Solution file\",\n    \"soy\": \"Soy (Closure Template)\",\n    \"sparql\": \"SPARQL\",\n    \"rq\": \"SPARQL\",\n    \"splunk-spl\": \"Splunk SPL\",\n    \"sqf\": \"SQF: Status Quo Function (Arma 3)\",\n    \"sql\": \"SQL\",\n    \"iecst\": \"Structured Text (IEC 61131-3)\",\n    \"t4-templating\": \"T4 templating\",\n    \"t4-cs\": \"T4 Text Templates (C#)\",\n    \"t4\": \"T4 Text Templates (C#)\",\n    \"t4-vb\": \"T4 Text Templates (VB)\",\n    \"tap\": \"TAP\",\n    \"tt2\": \"Template Toolkit 2\",\n    \"toml\": \"TOML\",\n    \"trig\": \"TriG\",\n    \"ts\": \"TypeScript\",\n    \"tsconfig\": \"TSConfig\",\n    \"uscript\": \"UnrealScript\",\n    \"uc\": \"UnrealScript\",\n    \"vbnet\": \"VB.Net\",\n    \"vhdl\": \"VHDL\",\n    \"vim\": \"vim\",\n    \"visual-basic\": \"Visual Basic\",\n    \"vba\": \"VBA\",\n    \"vb\": \"Visual Basic\",\n    \"wasm\": \"WebAssembly\",\n    \"wiki\": \"Wiki markup\",\n    \"xeoracube\": \"XeoraCube\",\n    \"xml-doc\": \"XML doc (.net)\",\n    \"xojo\": \"Xojo (REALbasic)\",\n    \"xquery\": \"XQuery\",\n    \"yaml\": \"YAML\",\n    \"yml\": \"YAML\",\n    \"yang\": \"YANG\"\n  }\n  /*]*/\n  ;\n  Prism.plugins.toolbar.registerButton('show-language', function (env) {\n    var pre = env.element.parentNode;\n\n    if (!pre || !/pre/i.test(pre.nodeName)) {\n      return;\n    }\n    /**\n     * Tries to guess the name of a language given its id.\n     *\n     * @param {string} id The language id.\n     * @returns {string}\n     */\n\n\n    function guessTitle(id) {\n      if (!id) {\n        return id;\n      }\n\n      return (id.substring(0, 1).toUpperCase() + id.substring(1)).replace(/s(?=cript)/, 'S');\n    }\n\n    var language = pre.getAttribute('data-language') || Languages[env.language] || guessTitle(env.language);\n\n    if (!language) {\n      return;\n    }\n\n    var element = document.createElement('span');\n    element.textContent = language;\n    return element;\n  });\n})();","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport \"../../static/scss/common.scss\";\r\n\r\nexport default function Layout({ children }) {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      {/* <!-- ### 헤더 ### --> */}\r\n      <header className=\"header\">\r\n        <div>\r\n          <h1>\r\n            <Link to=\"/\">Sonky</Link>\r\n          </h1>\r\n        </div>\r\n      </header>\r\n\r\n      {children}\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport \"../../static/scss/common.scss\";\r\n\r\nexport default function Tooltip({ text, children }) {\r\n  const handleTooltip = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (e.target.parentNode.classList.contains('active')) {\r\n      e.target.parentNode.classList.remove('active');\r\n    } else {\r\n      e.target.parentNode.classList.add('active');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div data-tooltip=\"click\">\r\n      <a href=\"?none\" className=\"btn-type1\" target=\"_blank\" rel=\"noreferrer\" onClick={handleTooltip}>{text}</a>\r\n      <div>{children}</div>\r\n    </div>\r\n  )\r\n}","Prism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\\s*[\\[$\\w\\xA0-\\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: Prism.languages.regex\n      },\n      'regex-flags': /[a-z]+$/,\n      'regex-delimiter': /^\\/|\\/$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\n\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;","(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\((?!\\s*\\))\\s*)(?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))+?(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n    'important': /!important\\b/i,\n    'function': /[-a-z0-9]+(?=\\()/i,\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      'style-attr': {\n        pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n        inside: {\n          'attr-name': {\n            pattern: /^\\s*style/i,\n            inside: markup.tag.inside\n          },\n          'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n          'attr-value': {\n            pattern: /.+/i,\n            inside: Prism.languages.css\n          }\n        },\n        alias: 'language-css'\n      }\n    }, markup.tag);\n  }\n})(Prism);","Prism.languages.markup = {\n  'comment': /<!--[\\s\\S]*?-->/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;","import React, { useEffect } from \"react\";\nimport { Layout } from \"../../components/index\";\nimport Prism from \"prismjs\";\nimport Posco1 from '../../images/posco/posco1.png';\n\n// main\nconst IndexPage = () => {\n  useEffect(() => {\n    setTimeout(() => Prism.highlightAll(), 0)\n  })\n  return (\n    <Layout>\n      <main className=\"container center\">\n        {/* 포스코 */}\n        <section className=\"section-type1\">\n          <h2 className=\"tit-sub1\">포스코 차세대 MES 3.0 시스템 UI 개선</h2>\n          <p className=\"txt-p\">\n            포스코 MES 시스템을 React로 재구축한 프로젝트입니다.<br />\n            UI는 <a href=\"https://react.semantic-ui.com/\" target=\"_blank\" rel=\"noreferrer\">Semantic-UI-React</a>를 기반으로 하였습니다.\n          </p>\n          <div>\n            <figure>\n              <a href={Posco1} target=\"_blank\" rel=\"noreferrer\">\n                <img src={Posco1} alt=\"\" />\n              </a>\n              <figcaption>\n                ag-grid 와 rechart를 활용한 페이지<br />\n                <a href=\"https://codepen.io/Sonky/project/editor/ZKezNM\" target=\"_blank\" rel=\"noreferrer\">https://codepen.io/Sonky/project/editor/ZKezNM</a>\n              </figcaption>\n            </figure>\n            <div className=\"code\">\n              <strong>index.jsx</strong>\n              <pre className=\"line-numbers\">\n                <code className=\"language-js\">\n                  {`import React, { Component } from 'react';\nimport { ContentLayout, Segment } from '@mes/mes-ui-react';\nimport SearchView from './SearchView';\nimport ButtonView1 from './ButtonView1';\nimport TableView from './TableView';\nimport ButtonView2 from './ButtonView2';\nimport ChartView from './ChartView';\n\nclass Index extends Component {\n  render() {\n    return (\n      <ContentLayout>\n        <ContentLayout.Header title=\"폭예측 Simulator\" />\n\n        <SearchView />\n        \n        <Segment>\n          <ButtonView1 />\n          <TableView />\n        </Segment>\n\n        <Segment>\n          <ButtonView2 />\n          <ChartView />\n        </Segment>\n      </ContentLayout>\n    );\n  }\n}\n\nexport default Index;`}\n                </code>\n              </pre>\n            </div>\n            <div className=\"code\">\n              <strong>datagrid.jsx</strong>\n              <pre className=\"line-numbers\">\n                <code className=\"language-js\">\n                  {`import React, { Component } from 'react';\nimport { DataGrid } from '@mes/mes-ui-react';\n\nclass TableView extends Component {\n  state = {\n    columnDefs: [\n      {\n        colId: 'col1',\n        field: 'col1',\n        headerName: '구분',\n        headerCheckboxSelection: false,\n        headerCheckboxSelectionFilteredOnly: true,\n        checkboxSelection: true,\n      },\n      { colId: 'col2', field: 'col2', headerName: 'SEQ' },\n      { colId: 'col3', field: 'col3', headerName: '재료번호' },\n      {\n        colId: 'group1',\n        headerName: '주문 Size',\n        groupId: 'group1',\n        children: [\n          { colId: 'col4', field: 'col4', headerName: '두께' },\n          { colId: 'col5', field: 'col5', headerName: '폭' },\n        ],\n      },\n      {\n        colId: 'group2',\n        headerName: '소재 Size',\n        groupId: 'group2',\n        children: [\n          { colId: 'col6', field: 'col6', headerName: '두께' },\n          { colId: 'col7', field: 'col7', headerName: '폭' },\n        ],\n      },\n      { colId: 'col8', field: 'col8', headerName: '중량' },\n      { colId: 'col9', field: 'col9', headerName: 'S/T' },\n      { colId: 'col10', field: 'col10', headerName: '품명' },\n      { colId: 'col11', field: 'col11', headerName: '용도' },\n      { colId: 'col12', field: 'col12', headerName: '재질' },\n      { colId: 'col13', field: 'col13', headerName: '출강목표' },\n      { colId: 'col14', field: 'col14', headerName: '폭 예측값' },\n    ],\n    rowData: [\n      {\n        col1: '',\n        col2: '1',\n        col3: 'CBH2751',\n        col4: '0.930',\n        col5: '1155.0',\n        col6: '0.930',\n        col7: '1155.0',\n        col8: '12,300',\n        col9: 'M',\n        col10: 'FZG',\n        col11: 'SE4U',\n        col12: 'ZTTCLCSUAA',\n        col13: 'WU3040YDTI1',\n        col14: '1,153.5',\n      },\n    ],\n    rowSelection: 'multiple',\n  };\n\n  onRowSelected = event => {\n    console.log('onRowSelected : ', event);\n  };\n\n  onCellValueChanged = params => {\n    console.log('onCellValueChanged : ', params);\n  };\n\n  onGridReady = params => {\n    this.grid = {\n      api: params.api,\n      columnApi: params.columnApi,\n    };\n  };\n\n  render() {\n    const { columnDefs, rowData, rowSelection } = this.state;\n\n    return (\n      <DataGrid\n        columnDefs={columnDefs}\n        rowData={rowData}\n        onGridReady={this.onGridReady}\n        rowSelection={rowSelection}\n        onRowSelected={this.onRowSelected}\n        onCellValueChanged={this.onCellValueChanged}\n        maxHeight={300}\n      />\n    );\n  }\n}\n\nexport default TableView;`}\n                </code>\n              </pre>\n            </div>\n            <div className=\"code\">\n              <strong>chart.jsx</strong>\n              <pre className=\"line-numbers\">\n                <code className=\"language-js\">\n                  {`import React, { PureComponent } from 'react';\nimport { Chart } from '@mes/mes-ui-react';\n\nclass ChartView extends PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      chartData: [\n        { name: 'CBH2551 [1153]', 폭: 1155 },\n        { name: 'CBH2552 [1152]', 폭: 1155 },\n        { name: 'CBH2553 [1150]', 폭: 1100 },\n        { name: 'CBH2554 [1149]', 폭: 1100 },\n        { name: 'CBH2555 [1152]', 폭: 1155 },\n      ],\n    };\n  }\n\n  render() {\n    return <Chart.Bar data={this.state.chartData} />;\n  }\n}\n\nexport default ChartView;`}\n                </code>\n              </pre>\n            </div>\n          </div>\n        </section>\n      </main>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n","/// <reference lib=\"WebWorker\"/>\nvar _self = typeof window !== 'undefined' ? window // if in browser\n: typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope ? self // if in worker\n: {} // if in node js\n;\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\n\n\nvar Prism = function (_self) {\n  // Private helper vars\n  var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n  var uniqueId = 0;\n  var _ = {\n    /**\n     * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n     * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n     * additional languages or plugins yourself.\n     *\n     * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n     *\n     * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n     * empty Prism object into the global scope before loading the Prism script like this:\n     *\n     * ```js\n     * window.Prism = window.Prism || {};\n     * Prism.manual = true;\n     * // add a new <script> to load Prism's script\n     * ```\n     *\n     * @default false\n     * @type {boolean}\n     * @memberof Prism\n     * @public\n     */\n    manual: _self.Prism && _self.Prism.manual,\n    disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n    /**\n     * A namespace for utility methods.\n     *\n     * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n     * change or disappear at any time.\n     *\n     * @namespace\n     * @memberof Prism\n     */\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, encode(tokens.content), tokens.alias);\n        } else if (Array.isArray(tokens)) {\n          return tokens.map(encode);\n        } else {\n          return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n        }\n      },\n\n      /**\n       * Returns the name of the type of the given value.\n       *\n       * @param {any} o\n       * @returns {string}\n       * @example\n       * type(null)      === 'Null'\n       * type(undefined) === 'Undefined'\n       * type(123)       === 'Number'\n       * type('foo')     === 'String'\n       * type(true)      === 'Boolean'\n       * type([1, 2])    === 'Array'\n       * type({})        === 'Object'\n       * type(String)    === 'Function'\n       * type(/abc+/)    === 'RegExp'\n       */\n      type: function type(o) {\n        return Object.prototype.toString.call(o).slice(8, -1);\n      },\n\n      /**\n       * Returns a unique number for the given object. Later calls will still return the same number.\n       *\n       * @param {Object} obj\n       * @returns {number}\n       */\n      objId: function objId(obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', {\n            value: ++uniqueId\n          });\n        }\n\n        return obj['__id'];\n      },\n\n      /**\n       * Creates a deep clone of the given object.\n       *\n       * The main intended use of this function is to clone language definitions.\n       *\n       * @param {T} o\n       * @param {Record<number, any>} [visited]\n       * @returns {T}\n       * @template T\n       */\n      clone: function deepClone(o, visited) {\n        visited = visited || {};\n        var clone, id;\n\n        switch (_.util.type(o)) {\n          case 'Object':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone =\n            /** @type {Record<string, any>} */\n            {};\n            visited[id] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = deepClone(o[key], visited);\n              }\n            }\n\n            return (\n              /** @type {any} */\n              clone\n            );\n\n          case 'Array':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone = [];\n            visited[id] = clone;\n\n            /** @type {Array} */\n\n            /** @type {any} */\n            o.forEach(function (v, i) {\n              clone[i] = deepClone(v, visited);\n            });\n            return (\n              /** @type {any} */\n              clone\n            );\n\n          default:\n            return o;\n        }\n      },\n\n      /**\n       * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n       *\n       * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n       *\n       * @param {Element} element\n       * @returns {string}\n       */\n      getLanguage: function getLanguage(element) {\n        while (element && !lang.test(element.className)) {\n          element = element.parentElement;\n        }\n\n        if (element) {\n          return (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n        }\n\n        return 'none';\n      },\n\n      /**\n       * Returns the script element that is currently executing.\n       *\n       * This does __not__ work for line script element.\n       *\n       * @returns {HTMLScriptElement | null}\n       */\n      currentScript: function currentScript() {\n        if (typeof document === 'undefined') {\n          return null;\n        }\n\n        if ('currentScript' in document && 1 < 2\n        /* hack to trip TS' flow analysis */\n        ) {\n            return (\n              /** @type {any} */\n              document.currentScript\n            );\n          } // IE11 workaround\n        // we'll get the src of the current script by parsing IE11's error stack trace\n        // this will not work for inline scripts\n\n\n        try {\n          throw new Error();\n        } catch (err) {\n          // Get file src url from stack. Specifically works with the format of stack traces in IE.\n          // A stack will look like this:\n          //\n          // Error\n          //    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n          //    at Global code (http://localhost/components/prism-core.js:606:1)\n          var src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\n          if (src) {\n            var scripts = document.getElementsByTagName('script');\n\n            for (var i in scripts) {\n              if (scripts[i].src == src) {\n                return scripts[i];\n              }\n            }\n          }\n\n          return null;\n        }\n      },\n\n      /**\n       * Returns whether a given class is active for `element`.\n       *\n       * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n       * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n       * given class is just the given class with a `no-` prefix.\n       *\n       * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n       * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n       * ancestors have the given class or the negated version of it, then the default activation will be returned.\n       *\n       * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n       * version of it, the class is considered active.\n       *\n       * @param {Element} element\n       * @param {string} className\n       * @param {boolean} [defaultActivation=false]\n       * @returns {boolean}\n       */\n      isActive: function isActive(element, className, defaultActivation) {\n        var no = 'no-' + className;\n\n        while (element) {\n          var classList = element.classList;\n\n          if (classList.contains(className)) {\n            return true;\n          }\n\n          if (classList.contains(no)) {\n            return false;\n          }\n\n          element = element.parentElement;\n        }\n\n        return !!defaultActivation;\n      }\n    },\n\n    /**\n     * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n     *\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    languages: {\n      /**\n       * Creates a deep copy of the language with the given id and appends the given tokens.\n       *\n       * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n       * will be overwritten at its original position.\n       *\n       * ## Best practices\n       *\n       * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n       * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n       * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n       *\n       * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n       * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n       *\n       * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n       * @param {Grammar} redef The new tokens to append.\n       * @returns {Grammar} The new language created.\n       * @public\n       * @example\n       * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n       *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n       *     // at its original position\n       *     'comment': { ... },\n       *     // CSS doesn't have a 'color' token, so this token will be appended\n       *     'color': /\\b(?:red|green|blue)\\b/\n       * });\n       */\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\n       * Inserts tokens _before_ another token in a language definition or any other grammar.\n       *\n       * ## Usage\n       *\n       * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n       * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n       * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n       * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n       * this:\n       *\n       * ```js\n       * Prism.languages.markup.style = {\n       *     // token\n       * };\n       * ```\n       *\n       * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n       * before existing tokens. For the CSS example above, you would use it like this:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'cdata', {\n       *     'style': {\n       *         // token\n       *     }\n       * });\n       * ```\n       *\n       * ## Special cases\n       *\n       * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n       * will be ignored.\n       *\n       * This behavior can be used to insert tokens after `before`:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'comment', {\n       *     'comment': Prism.languages.markup.comment,\n       *     // tokens after 'comment'\n       * });\n       * ```\n       *\n       * ## Limitations\n       *\n       * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n       * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n       * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n       * deleting properties which is necessary to insert at arbitrary positions.\n       *\n       * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n       * Instead, it will create a new object and replace all references to the target object with the new one. This\n       * can be done without temporarily deleting properties, so the iteration order is well-defined.\n       *\n       * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n       * you hold the target object in a variable, then the value of the variable will not change.\n       *\n       * ```js\n       * var oldMarkup = Prism.languages.markup;\n       * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n       *\n       * assert(oldMarkup !== Prism.languages.markup);\n       * assert(newMarkup === Prism.languages.markup);\n       * ```\n       *\n       * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n       * object to be modified.\n       * @param {string} before The key to insert before.\n       * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n       * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n       * object to be modified.\n       *\n       * Defaults to `Prism.languages`.\n       * @returns {Grammar} The new grammar object.\n       * @public\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root ||\n        /** @type {any} */\n        _.languages;\n        var grammar = root[inside];\n        /** @type {Grammar} */\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            } // Do not insert token which also occur in insert. See #1525\n\n\n            if (!insert.hasOwnProperty(token)) {\n              ret[token] = grammar[token];\n            }\n          }\n        }\n\n        var old = root[inside];\n        root[inside] = ret; // Update references in other language definitions\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === old && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n        var objId = _.util.objId;\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            var property = o[i],\n                propertyType = _.util.type(property);\n\n            if (propertyType === 'Object' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, null, visited);\n            } else if (propertyType === 'Array' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n\n    /**\n     * This is the most high-level function in Prism’s API.\n     * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n     * each one of them.\n     *\n     * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n     *\n     * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n     * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n     * @memberof Prism\n     * @public\n     */\n    highlightAll: function highlightAll(async, callback) {\n      _.highlightAllUnder(document, async, callback);\n    },\n\n    /**\n     * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n     * {@link Prism.highlightElement} on each one of them.\n     *\n     * The following hooks will be run:\n     * 1. `before-highlightall`\n     * 2. `before-all-elements-highlight`\n     * 3. All hooks of {@link Prism.highlightElement} for each element.\n     *\n     * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n     * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n     * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n     * @memberof Prism\n     * @public\n     */\n    highlightAllUnder: function highlightAllUnder(container, async, callback) {\n      var env = {\n        callback: callback,\n        container: container,\n        selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n      };\n\n      _.hooks.run('before-highlightall', env);\n\n      env.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n      _.hooks.run('before-all-elements-highlight', env);\n\n      for (var i = 0, element; element = env.elements[i++];) {\n        _.highlightElement(element, async === true, env.callback);\n      }\n    },\n\n    /**\n     * Highlights the code inside a single element.\n     *\n     * The following hooks will be run:\n     * 1. `before-sanity-check`\n     * 2. `before-highlight`\n     * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n     * 4. `before-insert`\n     * 5. `after-highlight`\n     * 6. `complete`\n     *\n     * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n     * the element's language.\n     *\n     * @param {Element} element The element containing the code.\n     * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n     * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n     * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n     * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n     *\n     * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n     * asynchronous highlighting to work. You can build your own bundle on the\n     * [Download page](https://prismjs.com/download.html).\n     * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n     * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n     * @memberof Prism\n     * @public\n     */\n    highlightElement: function highlightElement(element, async, callback) {\n      // Find language\n      var language = _.util.getLanguage(element);\n\n      var grammar = _.languages[language]; // Set language on the element, if not present\n\n      element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language; // Set language on the parent, for styling\n\n      var parent = element.parentElement;\n\n      if (parent && parent.nodeName.toLowerCase() === 'pre') {\n        parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n      }\n\n      var code = element.textContent;\n      var env = {\n        element: element,\n        language: language,\n        grammar: grammar,\n        code: code\n      };\n\n      function insertHighlightedCode(highlightedCode) {\n        env.highlightedCode = highlightedCode;\n\n        _.hooks.run('before-insert', env);\n\n        env.element.innerHTML = env.highlightedCode;\n\n        _.hooks.run('after-highlight', env);\n\n        _.hooks.run('complete', env);\n\n        callback && callback.call(env.element);\n      }\n\n      _.hooks.run('before-sanity-check', env);\n\n      if (!env.code) {\n        _.hooks.run('complete', env);\n\n        callback && callback.call(env.element);\n        return;\n      }\n\n      _.hooks.run('before-highlight', env);\n\n      if (!env.grammar) {\n        insertHighlightedCode(_.util.encode(env.code));\n        return;\n      }\n\n      if (async && _self.Worker) {\n        var worker = new Worker(_.filename);\n\n        worker.onmessage = function (evt) {\n          insertHighlightedCode(evt.data);\n        };\n\n        worker.postMessage(JSON.stringify({\n          language: env.language,\n          code: env.code,\n          immediateClose: true\n        }));\n      } else {\n        insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n      }\n    },\n\n    /**\n     * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n     * and the language definitions to use, and returns a string with the HTML produced.\n     *\n     * The following hooks will be run:\n     * 1. `before-tokenize`\n     * 2. `after-tokenize`\n     * 3. `wrap`: On each {@link Token}.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @param {string} language The name of the language definition passed to `grammar`.\n     * @returns {string} The highlighted HTML.\n     * @memberof Prism\n     * @public\n     * @example\n     * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n     */\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n\n      _.hooks.run('before-tokenize', env);\n\n      env.tokens = _.tokenize(env.code, env.grammar);\n\n      _.hooks.run('after-tokenize', env);\n\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n\n    /**\n     * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n     * and the language definitions to use, and returns an array with the tokenized code.\n     *\n     * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n     *\n     * This method could be useful in other contexts as well, as a very crude parser.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @returns {TokenStream} An array of strings and tokens, a token stream.\n     * @memberof Prism\n     * @public\n     * @example\n     * let code = `var foo = 0;`;\n     * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n     * tokens.forEach(token => {\n     *     if (token instanceof Prism.Token && token.type === 'number') {\n     *         console.log(`Found numeric literal: ${token.content}`);\n     *     }\n     * });\n     */\n    tokenize: function tokenize(text, grammar) {\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      var tokenList = new LinkedList();\n      addAfter(tokenList, tokenList.head, text);\n      matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n      return toArray(tokenList);\n    },\n\n    /**\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    hooks: {\n      all: {},\n\n      /**\n       * Adds the given callback to the list of callbacks for the given hook.\n       *\n       * The callback will be invoked when the hook it is registered for is run.\n       * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n       *\n       * One callback function can be registered to multiple hooks and the same hook multiple times.\n       *\n       * @param {string} name The name of the hook.\n       * @param {HookCallback} callback The callback function which is given environment variables.\n       * @public\n       */\n      add: function add(name, callback) {\n        var hooks = _.hooks.all;\n        hooks[name] = hooks[name] || [];\n        hooks[name].push(callback);\n      },\n\n      /**\n       * Runs a hook invoking all registered callbacks with the given environment variables.\n       *\n       * Callbacks will be invoked synchronously and in the order in which they were registered.\n       *\n       * @param {string} name The name of the hook.\n       * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n       * @public\n       */\n      run: function run(name, env) {\n        var callbacks = _.hooks.all[name];\n\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n\n        for (var i = 0, callback; callback = callbacks[i++];) {\n          callback(env);\n        }\n      }\n    },\n    Token: Token\n  };\n  _self.Prism = _; // Typescript note:\n  // The following can be used to import the Token type in JSDoc:\n  //\n  //   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n  /**\n   * Creates a new token.\n   *\n   * @param {string} type See {@link Token#type type}\n   * @param {string | TokenStream} content See {@link Token#content content}\n   * @param {string|string[]} [alias] The alias(es) of the token.\n   * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n   * @class\n   * @global\n   * @public\n   */\n\n  function Token(type, content, alias, matchedStr) {\n    /**\n     * The type of the token.\n     *\n     * This is usually the key of a pattern in a {@link Grammar}.\n     *\n     * @type {string}\n     * @see GrammarToken\n     * @public\n     */\n    this.type = type;\n    /**\n     * The strings or tokens contained by this token.\n     *\n     * This will be a token stream if the pattern matched also defined an `inside` grammar.\n     *\n     * @type {string | TokenStream}\n     * @public\n     */\n\n    this.content = content;\n    /**\n     * The alias(es) of the token.\n     *\n     * @type {string|string[]}\n     * @see GrammarToken\n     * @public\n     */\n\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || '').length | 0;\n  }\n  /**\n   * A token stream is an array of strings and {@link Token Token} objects.\n   *\n   * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n   * them.\n   *\n   * 1. No adjacent strings.\n   * 2. No empty strings.\n   *\n   *    The only exception here is the token stream that only contains the empty string and nothing else.\n   *\n   * @typedef {Array<string | Token>} TokenStream\n   * @global\n   * @public\n   */\n\n  /**\n   * Converts the given token or token stream to an HTML representation.\n   *\n   * The following hooks will be run:\n   * 1. `wrap`: On each {@link Token}.\n   *\n   * @param {string | Token | TokenStream} o The token or token stream to be converted.\n   * @param {string} language The name of current language.\n   * @returns {string} The HTML representation of the token or token stream.\n   * @memberof Token\n   * @static\n   */\n\n\n  Token.stringify = function stringify(o, language) {\n    if (typeof o == 'string') {\n      return o;\n    }\n\n    if (Array.isArray(o)) {\n      var s = '';\n      o.forEach(function (e) {\n        s += stringify(e, language);\n      });\n      return s;\n    }\n\n    var env = {\n      type: o.type,\n      content: stringify(o.content, language),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language\n    };\n    var aliases = o.alias;\n\n    if (aliases) {\n      if (Array.isArray(aliases)) {\n        Array.prototype.push.apply(env.classes, aliases);\n      } else {\n        env.classes.push(aliases);\n      }\n    }\n\n    _.hooks.run('wrap', env);\n\n    var attributes = '';\n\n    for (var name in env.attributes) {\n      attributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n    }\n\n    return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n  };\n  /**\n   * @param {string} text\n   * @param {LinkedList<string | Token>} tokenList\n   * @param {any} grammar\n   * @param {LinkedListNode<string | Token>} startNode\n   * @param {number} startPos\n   * @param {RematchOptions} [rematch]\n   * @returns {void}\n   * @private\n   *\n   * @typedef RematchOptions\n   * @property {string} cause\n   * @property {number} reach\n   */\n\n\n  function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n    for (var token in grammar) {\n      if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n        continue;\n      }\n\n      var patterns = grammar[token];\n      patterns = Array.isArray(patterns) ? patterns : [patterns];\n\n      for (var j = 0; j < patterns.length; ++j) {\n        if (rematch && rematch.cause == token + ',' + j) {\n          return;\n        }\n\n        var patternObj = patterns[j],\n            inside = patternObj.inside,\n            lookbehind = !!patternObj.lookbehind,\n            greedy = !!patternObj.greedy,\n            lookbehindLength = 0,\n            alias = patternObj.alias;\n\n        if (greedy && !patternObj.pattern.global) {\n          // Without the global flag, lastIndex won't work\n          var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n          patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n        }\n        /** @type {RegExp} */\n\n\n        var pattern = patternObj.pattern || patternObj;\n\n        for ( // iterate the token list and keep track of the current token/string position\n        var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n          if (rematch && pos >= rematch.reach) {\n            break;\n          }\n\n          var str = currentNode.value;\n\n          if (tokenList.length > text.length) {\n            // Something went terribly wrong, ABORT, ABORT!\n            return;\n          }\n\n          if (str instanceof Token) {\n            continue;\n          }\n\n          var removeCount = 1; // this is the to parameter of removeBetween\n\n          if (greedy && currentNode != tokenList.tail.prev) {\n            pattern.lastIndex = pos;\n            var match = pattern.exec(text);\n\n            if (!match) {\n              break;\n            }\n\n            var from = match.index + (lookbehind && match[1] ? match[1].length : 0);\n            var to = match.index + match[0].length;\n            var p = pos; // find the node that contains the match\n\n            p += currentNode.value.length;\n\n            while (from >= p) {\n              currentNode = currentNode.next;\n              p += currentNode.value.length;\n            } // adjust pos (and p)\n\n\n            p -= currentNode.value.length;\n            pos = p; // the current node is a Token, then the match starts inside another Token, which is invalid\n\n            if (currentNode.value instanceof Token) {\n              continue;\n            } // find the last node which is affected by this match\n\n\n            for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === 'string'); k = k.next) {\n              removeCount++;\n              p += k.value.length;\n            }\n\n            removeCount--; // replace with the new match\n\n            str = text.slice(pos, p);\n            match.index -= pos;\n          } else {\n            pattern.lastIndex = 0;\n            var match = pattern.exec(str);\n          }\n\n          if (!match) {\n            continue;\n          }\n\n          if (lookbehind) {\n            lookbehindLength = match[1] ? match[1].length : 0;\n          }\n\n          var from = match.index + lookbehindLength,\n              matchStr = match[0].slice(lookbehindLength),\n              to = from + matchStr.length,\n              before = str.slice(0, from),\n              after = str.slice(to);\n          var reach = pos + str.length;\n\n          if (rematch && reach > rematch.reach) {\n            rematch.reach = reach;\n          }\n\n          var removeFrom = currentNode.prev;\n\n          if (before) {\n            removeFrom = addAfter(tokenList, removeFrom, before);\n            pos += before.length;\n          }\n\n          removeRange(tokenList, removeFrom, removeCount);\n          var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n          currentNode = addAfter(tokenList, removeFrom, wrapped);\n\n          if (after) {\n            addAfter(tokenList, currentNode, after);\n          }\n\n          if (removeCount > 1) {\n            // at least one Token object was removed, so we have to do some rematching\n            // this can only happen if the current pattern is greedy\n            matchGrammar(text, tokenList, grammar, currentNode.prev, pos, {\n              cause: token + ',' + j,\n              reach: reach\n            });\n          }\n        }\n      }\n    }\n  }\n  /**\n   * @typedef LinkedListNode\n   * @property {T} value\n   * @property {LinkedListNode<T> | null} prev The previous node.\n   * @property {LinkedListNode<T> | null} next The next node.\n   * @template T\n   * @private\n   */\n\n  /**\n   * @template T\n   * @private\n   */\n\n\n  function LinkedList() {\n    /** @type {LinkedListNode<T>} */\n    var head = {\n      value: null,\n      prev: null,\n      next: null\n    };\n    /** @type {LinkedListNode<T>} */\n\n    var tail = {\n      value: null,\n      prev: head,\n      next: null\n    };\n    head.next = tail;\n    /** @type {LinkedListNode<T>} */\n\n    this.head = head;\n    /** @type {LinkedListNode<T>} */\n\n    this.tail = tail;\n    this.length = 0;\n  }\n  /**\n   * Adds a new node with the given value to the list.\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {T} value\n   * @returns {LinkedListNode<T>} The added node.\n   * @template T\n   */\n\n\n  function addAfter(list, node, value) {\n    // assumes that node != list.tail && values.length >= 0\n    var next = node.next;\n    var newNode = {\n      value: value,\n      prev: node,\n      next: next\n    };\n    node.next = newNode;\n    next.prev = newNode;\n    list.length++;\n    return newNode;\n  }\n  /**\n   * Removes `count` nodes after the given node. The given node will not be removed.\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {number} count\n   * @template T\n   */\n\n\n  function removeRange(list, node, count) {\n    var next = node.next;\n\n    for (var i = 0; i < count && next !== list.tail; i++) {\n      next = next.next;\n    }\n\n    node.next = next;\n    next.prev = node;\n    list.length -= i;\n  }\n  /**\n   * @param {LinkedList<T>} list\n   * @returns {T[]}\n   * @template T\n   */\n\n\n  function toArray(list) {\n    var array = [];\n    var node = list.head.next;\n\n    while (node !== list.tail) {\n      array.push(node.value);\n      node = node.next;\n    }\n\n    return array;\n  }\n\n  if (!_self.document) {\n    if (!_self.addEventListener) {\n      // in Node.js\n      return _;\n    }\n\n    if (!_.disableWorkerMessageHandler) {\n      // In worker\n      _self.addEventListener('message', function (evt) {\n        var message = JSON.parse(evt.data),\n            lang = message.language,\n            code = message.code,\n            immediateClose = message.immediateClose;\n\n        _self.postMessage(_.highlight(code, _.languages[lang], lang));\n\n        if (immediateClose) {\n          _self.close();\n        }\n      }, false);\n    }\n\n    return _;\n  } // Get current script and highlight\n\n\n  var script = _.util.currentScript();\n\n  if (script) {\n    _.filename = script.src;\n\n    if (script.hasAttribute('data-manual')) {\n      _.manual = true;\n    }\n  }\n\n  function highlightAutomaticallyCallback() {\n    if (!_.manual) {\n      _.highlightAll();\n    }\n  }\n\n  if (!_.manual) {\n    // If the document state is \"loading\", then we'll use DOMContentLoaded.\n    // If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n    // DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n    // might take longer one animation frame to execute which can create a race condition where only some plugins have\n    // been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n    // See https://github.com/PrismJS/prism/issues/2102\n    var readyState = document.readyState;\n\n    if (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n      document.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n    } else {\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(highlightAutomaticallyCallback);\n      } else {\n        window.setTimeout(highlightAutomaticallyCallback, 16);\n      }\n    }\n  }\n\n  return _;\n}(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = Prism;\n} // hack for components to work correctly in node.js\n\n\nif (typeof global !== 'undefined') {\n  global.Prism = Prism;\n} // some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n*/\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n*/\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */","(function () {\n  if (typeof self === 'undefined' || !self.Prism || !self.document) {\n    return;\n  }\n  /**\n   * Plugin name which is used as a class name for <pre> which is activating the plugin\n   * @type {String}\n   */\n\n\n  var PLUGIN_NAME = 'line-numbers';\n  /**\n   * Regular expression used for determining line breaks\n   * @type {RegExp}\n   */\n\n  var NEW_LINE_EXP = /\\n(?!$)/g;\n  /**\n   * Global exports\n   */\n\n  var config = Prism.plugins.lineNumbers = {\n    /**\n     * Get node for provided line number\n     * @param {Element} element pre element\n     * @param {Number} number line number\n     * @return {Element|undefined}\n     */\n    getLine: function getLine(element, number) {\n      if (element.tagName !== 'PRE' || !element.classList.contains(PLUGIN_NAME)) {\n        return;\n      }\n\n      var lineNumberRows = element.querySelector('.line-numbers-rows');\n      var lineNumberStart = parseInt(element.getAttribute('data-start'), 10) || 1;\n      var lineNumberEnd = lineNumberStart + (lineNumberRows.children.length - 1);\n\n      if (number < lineNumberStart) {\n        number = lineNumberStart;\n      }\n\n      if (number > lineNumberEnd) {\n        number = lineNumberEnd;\n      }\n\n      var lineIndex = number - lineNumberStart;\n      return lineNumberRows.children[lineIndex];\n    },\n\n    /**\n     * Resizes the line numbers of the given element.\n     *\n     * This function will not add line numbers. It will only resize existing ones.\n     * @param {HTMLElement} element A `<pre>` element with line numbers.\n     * @returns {void}\n     */\n    resize: function resize(element) {\n      resizeElements([element]);\n    },\n\n    /**\n     * Whether the plugin can assume that the units font sizes and margins are not depended on the size of\n     * the current viewport.\n     *\n     * Setting this to `true` will allow the plugin to do certain optimizations for better performance.\n     *\n     * Set this to `false` if you use any of the following CSS units: `vh`, `vw`, `vmin`, `vmax`.\n     *\n     * @type {boolean}\n     */\n    assumeViewportIndependence: true\n  };\n  /**\n   * Resizes the given elements.\n   *\n   * @param {HTMLElement[]} elements\n   */\n\n  function resizeElements(elements) {\n    elements = elements.filter(function (e) {\n      var codeStyles = getStyles(e);\n      var whiteSpace = codeStyles['white-space'];\n      return whiteSpace === 'pre-wrap' || whiteSpace === 'pre-line';\n    });\n\n    if (elements.length == 0) {\n      return;\n    }\n\n    var infos = elements.map(function (element) {\n      var codeElement = element.querySelector('code');\n      var lineNumbersWrapper = element.querySelector('.line-numbers-rows');\n\n      if (!codeElement || !lineNumbersWrapper) {\n        return undefined;\n      }\n      /** @type {HTMLElement} */\n\n\n      var lineNumberSizer = element.querySelector('.line-numbers-sizer');\n      var codeLines = codeElement.textContent.split(NEW_LINE_EXP);\n\n      if (!lineNumberSizer) {\n        lineNumberSizer = document.createElement('span');\n        lineNumberSizer.className = 'line-numbers-sizer';\n        codeElement.appendChild(lineNumberSizer);\n      }\n\n      lineNumberSizer.innerHTML = '0';\n      lineNumberSizer.style.display = 'block';\n      var oneLinerHeight = lineNumberSizer.getBoundingClientRect().height;\n      lineNumberSizer.innerHTML = '';\n      return {\n        element: element,\n        lines: codeLines,\n        lineHeights: [],\n        oneLinerHeight: oneLinerHeight,\n        sizer: lineNumberSizer\n      };\n    }).filter(Boolean);\n    infos.forEach(function (info) {\n      var lineNumberSizer = info.sizer;\n      var lines = info.lines;\n      var lineHeights = info.lineHeights;\n      var oneLinerHeight = info.oneLinerHeight;\n      lineHeights[lines.length - 1] = undefined;\n      lines.forEach(function (line, index) {\n        if (line && line.length > 1) {\n          var e = lineNumberSizer.appendChild(document.createElement('span'));\n          e.style.display = 'block';\n          e.textContent = line;\n        } else {\n          lineHeights[index] = oneLinerHeight;\n        }\n      });\n    });\n    infos.forEach(function (info) {\n      var lineNumberSizer = info.sizer;\n      var lineHeights = info.lineHeights;\n      var childIndex = 0;\n\n      for (var i = 0; i < lineHeights.length; i++) {\n        if (lineHeights[i] === undefined) {\n          lineHeights[i] = lineNumberSizer.children[childIndex++].getBoundingClientRect().height;\n        }\n      }\n    });\n    infos.forEach(function (info) {\n      var lineNumberSizer = info.sizer;\n      var wrapper = info.element.querySelector('.line-numbers-rows');\n      lineNumberSizer.style.display = 'none';\n      lineNumberSizer.innerHTML = '';\n      info.lineHeights.forEach(function (height, lineNumber) {\n        wrapper.children[lineNumber].style.height = height + 'px';\n      });\n    });\n  }\n  /**\n   * Returns style declarations for the element\n   * @param {Element} element\n   */\n\n\n  var getStyles = function getStyles(element) {\n    if (!element) {\n      return null;\n    }\n\n    return window.getComputedStyle ? getComputedStyle(element) : element.currentStyle || null;\n  };\n\n  var lastWidth = undefined;\n  window.addEventListener('resize', function () {\n    if (config.assumeViewportIndependence && lastWidth === window.innerWidth) {\n      return;\n    }\n\n    lastWidth = window.innerWidth;\n    resizeElements(Array.prototype.slice.call(document.querySelectorAll('pre.' + PLUGIN_NAME)));\n  });\n  Prism.hooks.add('complete', function (env) {\n    if (!env.code) {\n      return;\n    }\n\n    var code =\n    /** @type {Element} */\n    env.element;\n    var pre =\n    /** @type {HTMLElement} */\n    code.parentNode; // works only for <code> wrapped inside <pre> (not inline)\n\n    if (!pre || !/pre/i.test(pre.nodeName)) {\n      return;\n    } // Abort if line numbers already exists\n\n\n    if (code.querySelector('.line-numbers-rows')) {\n      return;\n    } // only add line numbers if <code> or one of its ancestors has the `line-numbers` class\n\n\n    if (!Prism.util.isActive(code, PLUGIN_NAME)) {\n      return;\n    } // Remove the class 'line-numbers' from the <code>\n\n\n    code.classList.remove(PLUGIN_NAME); // Add the class 'line-numbers' to the <pre>\n\n    pre.classList.add(PLUGIN_NAME);\n    var match = env.code.match(NEW_LINE_EXP);\n    var linesNum = match ? match.length + 1 : 1;\n    var lineNumbersWrapper;\n    var lines = new Array(linesNum + 1).join('<span></span>');\n    lineNumbersWrapper = document.createElement('span');\n    lineNumbersWrapper.setAttribute('aria-hidden', 'true');\n    lineNumbersWrapper.className = 'line-numbers-rows';\n    lineNumbersWrapper.innerHTML = lines;\n\n    if (pre.hasAttribute('data-start')) {\n      pre.style.counterReset = 'linenumber ' + (parseInt(pre.getAttribute('data-start'), 10) - 1);\n    }\n\n    env.element.appendChild(lineNumbersWrapper);\n    resizeElements([pre]);\n    Prism.hooks.run('line-numbers', env);\n  });\n  Prism.hooks.add('line-numbers', function (env) {\n    env.plugins = env.plugins || {};\n    env.plugins.lineNumbers = true;\n  });\n})();","Prism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};"],"sourceRoot":""}